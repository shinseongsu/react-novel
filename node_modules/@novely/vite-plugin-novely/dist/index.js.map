{"version":3,"sources":["../src/plugin.ts"],"sourcesContent":["import type { Plugin } from 'vite';\nimport { parse, transform } from '@novely/parser';\nimport fs from 'fs/promises';\n\ninterface PluginOptions {\n\t/**\n\t * Extensions for plugin to handle\n\t */\n\textensions?: string[];\n\t/**\n\t * Rewrite action names\n\t */\n\trewrites?: Record<string, string>;\n}\n\nconst defaults = {\n\textensions: ['.novely'],\n\trewrites: {},\n};\n\n/**\n * @example\n * ```ts\n * import { defineConfig } from 'vite';\n * import { novelyPlugin } from 'vite-plugin-novely';\n *\n * export default defineConfig({\n *   plugins: [\n *     novelyPlugin()\n *   ]\n * })\n * ```\n */\nconst novelyPlugin = ({\n\textensions = defaults.extensions,\n\trewrites = defaults.rewrites,\n}: PluginOptions = {}) => {\n\tconst plugin: Plugin = {\n\t\tname: 'vite-plugin-nvl',\n\t\tasync load(id) {\n\t\t\tif (extensions.some((ending) => id.endsWith(ending))) {\n\t\t\t\tconst contents = await fs.readFile(id, 'utf8');\n\t\t\t\tconst ast = parse(contents);\n\t\t\t\tconst func = transform(ast, {\n\t\t\t\t\trewrites,\n\t\t\t\t});\n\n\t\t\t\treturn `export default ${func}`;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t};\n\n\treturn plugin;\n};\n\nexport { novelyPlugin };\n"],"mappings":"AACA,OAAS,SAAAA,EAAO,aAAAC,MAAiB,iBACjC,OAAOC,MAAQ,cAaf,IAAMC,EAAW,CAChB,WAAY,CAAC,SAAS,EACtB,SAAU,CAAC,CACZ,EAeMC,EAAe,CAAC,CACrB,WAAAC,EAAaF,EAAS,WACtB,SAAAG,EAAWH,EAAS,QACrB,EAAmB,CAAC,KACI,CACtB,KAAM,kBACN,MAAM,KAAKI,EAAI,CACd,GAAIF,EAAW,KAAMG,GAAWD,EAAG,SAASC,CAAM,CAAC,EAAG,CACrD,IAAMC,EAAW,MAAMP,EAAG,SAASK,EAAI,MAAM,EACvCG,EAAMV,EAAMS,CAAQ,EAK1B,MAAO,kBAJMR,EAAUS,EAAK,CAC3B,SAAAJ,CACD,CAAC,CAE4B,EAC9B,CAEA,OAAO,IACR,CACD","names":["parse","transform","fs","defaults","novelyPlugin","extensions","rewrites","id","ending","contents","ast"]}