import type { Component } from 'solid-js';
import type { Renderer, RendererInit } from '@novely/core';
import type { Emitter } from '../emitter';
import type { RendererStateStore, ContextStateStore, DeepAtom } from '@novely/renderer-toolkit';
import type { EmitterEventsMap, RendererStoreExtension, SettingsIcons } from '../types';
import type { Context } from '@novely/core';
type CreateRootComponentOpts = {
    setRoot: (root: HTMLDivElement) => void;
    renderer: Renderer;
    fullscreen: boolean;
    emitter: Emitter<EmitterEventsMap>;
    skipTypewriterWhenGoingBack: boolean;
    controls: 'inside' | 'outside';
    settingsIcons: SettingsIcons;
    showAudioSettings: boolean;
    rendererContext: Context;
    coreOptions: RendererInit<any, any>;
    $contextState: DeepAtom<ContextStateStore<Record<PropertyKey, unknown>>>;
    $rendererState: DeepAtom<RendererStateStore<RendererStoreExtension>>;
};
declare const createRootComponent: ({ $rendererState, $contextState, coreOptions, setRoot, renderer, showAudioSettings, fullscreen, emitter, controls, skipTypewriterWhenGoingBack, settingsIcons, rendererContext }: CreateRootComponentOpts) => Component;
export { createRootComponent };
